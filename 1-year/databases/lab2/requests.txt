1. Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ОЦЕНКИ, Н_ВЕДОМОСТИ.
Вывести атрибуты: Н_ОЦЕНКИ.ПРИМЕЧАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
Фильтры (AND):
a) Н_ОЦЕНКИ.КОД > 3.
b) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 142390.
Вид соединения: INNER JOIN.

SELECT 
    Н_ОЦЕНКИ.ПРИМЕЧАНИЕ, 
    Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM 
    Н_ВЕДОМОСТИ
INNER JOIN 
    Н_ОЦЕНКИ ON Н_ВЕДОМОСТИ.ОЦЕНКА = Н_ОЦЕНКИ.КОД
WHERE 
    Н_ОЦЕНКИ.КОД ~ '^\d+$' -- тк Н_ОЦЕНКИ.КОД может быть нечисловой строкой
    AND CAST(Н_ОЦЕНКИ.КОД AS int) > 3 
    AND Н_ВЕДОМОСТИ.ЧЛВК_ИД > 142390;


2. Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ЧЛВК_ИД.
Фильтры (AND):
a) Н_ЛЮДИ.ИМЯ > Николай.
b) Н_ВЕДОМОСТИ.ДАТА < 2022-06-08.
c) Н_СЕССИЯ.ИД > 27640.
Вид соединения: RIGHT JOIN.

SELECT 
    Н_ЛЮДИ.ОТЧЕСТВО,
    Н_ВЕДОМОСТИ.ИД,
    Н_СЕССИЯ.ЧЛВК_ИД
FROM
    Н_ЛЮДИ
RIGHT JOIN 
    Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
RIGHT JOIN 
    Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE
    Н_ЛЮДИ.ИМЯ > 'Николай'
    AND Н_ВЕДОМОСТИ.ДАТА < CAST('2022-06-08' AS DATE)
    AND Н_СЕССИЯ.ИД > 27640;


3. Вывести число студентов вечерней формы обучения, которые не имеет отчества.
Ответ должен содержать только одно число.

SELECT
    COUNT(*)
FROM 
    Н_УЧЕНИКИ
INNER JOIN
    Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN
    Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
RIGHT JOIN
    Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE
    Н_ЛЮДИ.ОТЧЕСТВО = '.'
    AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ ~ 'вечерняя';

неудобно использовать подзапрос из-за непрямой связи таблиц => комбинация join и подзапроса
+ Не хотим, чтобы подзапрос выполнялся для каждой строки тк реззультат - скаляр => юзаем только join



4. Найти группы, в которых в 2011 году было менее 10 обучающихся студентов на ФКТИУ.
Для реализации использовать соединение таблиц.

SELECT
    Н_УЧЕНИКИ.ГРУППА
FROM 
    Н_УЧЕНИКИ
INNER JOIN
    Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
INNER JOIN
    Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE
    Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
    AND Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2010/2011'
GROUP BY
    Н_УЧЕНИКИ.ГРУППА
HAVING 
    COUNT(*) < 10;

По заданию

    

5.Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не больше минимальной оценк(е|и) в группе 3100.

SELECT
    u1.ИД AS Номер,
    Н_ЛЮДИ.ИМЯ || ' ' ||  Н_ЛЮДИ.ФАМИЛИЯ || ' ' ||  Н_ЛЮДИ.ОТЧЕСТВО AS ФИО,
    AVG(CAST(v1.ОЦЕНКА AS int))
FROM 
    Н_УЧЕНИКИ u1
INNER JOIN
    Н_ЛЮДИ ON u1.ЧЛВК_ИД = Н_ЛЮДИ.ИД
INNER JOIN
    Н_ВЕДОМОСТИ v1 USING(ЧЛВК_ИД)
WHERE
    v1.ОЦЕНКА ~ '^\d+$'
GROUP BY
    u1.ИД,
    Н_ЛЮДИ.ИМЯ,
    Н_ЛЮДИ.ФАМИЛИЯ,
    Н_ЛЮДИ.ОТЧЕСТВО
HAVING
    AVG(CAST(v1.ОЦЕНКА AS int)) <= ALL(
        SELECT
            CAST(v2.ОЦЕНКА AS int)
        FROM 
            Н_ВЕДОМОСТИ v2
        INNER JOIN
            Н_УЧЕНИКИ u2 USING(ЧЛВК_ИД)
        WHERE
            v2.ОЦЕНКА ~ '^\d+$'
            AND u2.ГРУППА = '3100'
    );


6.Получить список студентов, отчисленных до первого сентября 2012 года с очной формы обучения (специальность: 230101). В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер пункта приказа;
Для реализации использовать подзапрос с EXISTS.


SELECT 
    Н_УЧЕНИКИ.ГРУППА,
    Н_УЧЕНИКИ.ИД,
    Н_ЛЮДИ.ИМЯ || ' ' || Н_ЛЮДИ.ФАМИЛИЯ || ' ' || Н_ЛЮДИ.ОТЧЕСТВО AS ФИО
FROM 
    Н_УЧЕНИКИ
INNER JOIN
    Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE
    Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл'
    AND Н_УЧЕНИКИ.КОНЕЦ < DATE('2012-09-01')
    AND EXISTS (
        SELECT 1
        FROM Н_ПЛАНЫ
        INNER JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
        INNER JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
        INNER JOIN Н_НАПР_СПЕЦ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД
        WHERE 
            Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
            AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
            AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
    );


7. Вывести список студентов, имеющих одинаковые имена, но не совпадающие ид.

SELECT
    u1.ИД,
    p1.ИМЯ || ' ' ||  p1.ФАМИЛИЯ || ' ' ||  p1.ОТЧЕСТВО AS ФИО
FROM
    Н_УЧЕНИКИ u1
INNER JOIN 
    Н_ЛЮДИ p1 ON u1.ЧЛВК_ИД = p1.ИД
WHERE EXISTS(
    SELECT 
        *
    FROM 
        Н_УЧЕНИКИ u2
    INNER JOIN 
        Н_ЛЮДИ p2 ON u2.ЧЛВК_ИД = p2.ИД
    WHERE
        p1.ИМЯ ~ '^\w+$'
        AND u1.ИД != u2.ИД
        AND p1.ИМЯ = p2.ИМЯ
)
ORDER BY
    p1.ИМЯ; 


Тяжело реализовать 'нормально' при помощи JOIN => подзапросы
self join using(ИМЯ) => много строк (долго и -память)
